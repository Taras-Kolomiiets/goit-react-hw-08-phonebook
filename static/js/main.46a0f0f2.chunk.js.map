{"version":3,"sources":["components/FormButton/FormButton.module.css","components/Filter/Filter.module.css","components/FormButton/FormButton.tsx","redux/contacts/contacts-slice.ts","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","components/RegisterForm/RegisterForm.tsx","redux/auth/auth-slice.ts","components/LoginForm/LoginForm.tsx","components/UserMenu/UserMenu.tsx","App.tsx","redux/store.ts","index.tsx","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","FormButton","type","onClick","disabled","children","allProps","className","s","button","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","filterStr","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","createContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactForm","contacts","addContactToPhonebook","name","phone","toLowerCase","filter","contact","includes","length","isInContacts","alert","initialValues","validationSchema","Yup","required","matches","onSubmit","values","resetForm","form","label","fieldInput","placeholder","component","validatorError","ContactList","onDelete","list","map","item","itemName","itemPhone","size","Filter","filterContacts","useState","filterValue","setFilterValue","useEffect","value","onChange","e","target","useStyles","makeStyles","theme","field","marginBottom","spacing","RegisterForm","registerUser","c","email","password","min","max","setSubmitting","TextField","Button","variant","color","authApi","credentials","loginUser","logoutUser","token","headers","Authorization","useRegisterUserMutation","useLoginUserMutation","useLogoutUserMutation","LoginForm","avatar","display","marginRight","container","alignItems","UserMenu","userName","onLogOut","Avatar","alt","Typography","IconButton","App","setFilter","user","setUser","setToken","data","onRegister","a","result","console","log","onLogin","onLogout","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46a0f0f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FormButton_button__2-gNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldInput\":\"Filter_fieldInput__1at_C\"};","import React, { FC } from 'react';\nimport s from './FormButton.module.css';\nimport { IButton } from '../../interfaces/IButton';\n\ninterface Props {\n   type?: string,\n  onClick?: () => void,\n  disabled?: boolean,\n  children?: any\n}\n\nconst FormButton: FC<Props> = ({\n  type = 'button',\n  onClick,\n  disabled = false,\n  children,\n  ...allProps\n}: IButton) => {\n  return (\n    <button\n      type={type}\n      className={s.button}\n      disabled={disabled}\n      onClick={onClick}\n      {...allProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default FormButton;\n\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61ac9aa5d228a9001703ab59.mockapi.io' }),\n  tagTypes: ['Contact'],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n        query: (filterStr) => `contacts?sortBy=name&name=${filterStr}`,\n        providesTags: ['Contact']\n    }),\n      deleteContact: builder.mutation({\n          query: (id) => ({\n              url: `/contacts/${id}`,\n              method: \"DELETE\",\n          }),\n          invalidatesTags: ['Contact']\n      }),\n      createContact: builder.mutation({\n          query: (newContact) => ({\n              url: '/contacts',\n              method: 'POST',\n              body: newContact\n          }),\n          invalidatesTags: ['Contact']\n      })\n  }),\n})\n\nexport const { useGetContactsQuery, useDeleteContactMutation, useCreateContactMutation } = contactsApi;","import * as Yup from 'yup';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport FormButton from '../FormButton/FormButton';\nimport s from './ContactForm.module.css';\nimport { useCreateContactMutation } from 'redux/contacts/contacts-slice';\nimport IContacts from 'interfaces/IContacts'\nimport IContact from 'interfaces/IContact'\n\n\nexport default function ContactForm({contacts}: IContacts) {\n  const [createContact] = useCreateContactMutation();\n\n  const isInContacts = (name: string) => {\n    name = name.toLowerCase();\n    return (\n      contacts.filter((contact: IContact) => contact.name.toLowerCase().includes(name))\n        .length > 0\n    );\n  };\n\n  const addContactToPhonebook = ({ name, phone }: {name: string, phone: string}) => {\n    if (isInContacts(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {name, phone}\n\n    createContact(contact);\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', phone: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .required()\n            .matches(\n              /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              \"Name can contain only letters, ', - and space.\",\n            ),\n          phone: Yup.string()\n            .required()\n            .matches(\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n              'Phone number should contain only numbers and it also could contain spaces, dash, parenthesis and starts with +',\n            ),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          addContactToPhonebook(values);\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Name:\n            <Field\n              className={s.fieldInput}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"enter your name\"\n            />\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Phone number:\n            <Field\n              className={s.fieldInput}\n              name=\"phone\"\n              type=\"tel\"\n              placeholder=\"enter your phone number\"\n            />\n            <ErrorMessage\n              name=\"phone\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Formik>\n      <hr />\n    </div>\n  );\n}\n","import FormButton from '../FormButton';\nimport { MdDelete } from 'react-icons/md';\nimport s from './ContactList.module.css';\nimport IContacts from 'interfaces/IContacts'\nimport IContact from 'interfaces/IContact';\n\ninterface IContactsList extends IContacts {\n  onDelete: (id: string) => void\n}\n\nexport default function ContactList({contacts, onDelete}: IContactsList) {\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, phone }: IContact) => (\n        <li key={id} className={s.item}>\n          <span className={s.itemName}>{name}</span>\n          <span className={s.itemPhone}>{phone}</span>\n          <FormButton\n            onClick={() => onDelete(id)}\n            aria-label=\"Delete contact\"\n          >\n            <MdDelete size=\"18\" />\n          </FormButton>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import {useState, useEffect } from 'react';\nimport s from './Filter.module.css';\n\ninterface IFilter {\n  filterContacts: (query: string) => void\n}\n\nexport default function Filter({ filterContacts }: IFilter) {\n  const [filterValue, setFilterValue] = useState<string>(\"\");\n\n  useEffect(() => {\n    filterContacts(filterValue);\n  }, [filterValue, filterContacts]);\n\n  const handleChangeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterValue(e.target.value);\n  };\n    return (\n      <div>\n        <label>\n          Find contacts by name:\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filterValue}\n            onChange={handleChangeFilter}\n            className={s.fieldInput}\n          />\n        </label>\n      </div>\n    );\n  }\n\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { Button } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  field: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default function RegisterForm({registerUser}: any) {\n  const c = useStyles();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string().required('Required'),\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting }) => {       \n        registerUser(values);\n        setSubmitting(false);\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            className={c.field}\n            name=\"name\"\n            type=\"text\"\n            label=\"User name\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            className={c.field}\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            className={c.field}\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n          />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Register\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://connections-api.herokuapp.com' }),\n  tagTypes: ['Auth'],\n  endpoints: (builder) => ({\n      registerUser: builder.mutation({\n          query: (credentials) => ({\n              url: '/users/signup',\n              method: 'POST',\n              body: credentials\n          }),\n          invalidatesTags: ['Auth']\n      }),\n      loginUser: builder.mutation({\n          query: (credentials) => ({\n              url: '/users/login',\n              method: 'POST',\n              body: credentials\n          }),\n          invalidatesTags: ['Auth']\n      }),\n      logoutUser: builder.mutation({\n          query: (token) => ({\n              url: '/users/logout',\n              method: 'POST',\n              headers: {\n                  Authorization: `Bearer ${token}`\n              }\n          }),\n          invalidatesTags: ['Auth']\n      }),\n  }),\n})\n\nexport const {  useRegisterUserMutation, useLoginUserMutation, useLogoutUserMutation } = authApi;","import * as Yup from 'yup';\nimport { Field, Form, Formik } from 'formik';\nimport { Button } from '@material-ui/core';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  field: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport default function LoginForm({loginUser}: any) {\n  const c = useStyles();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={Yup.object({\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n            loginUser(values);\n            setSubmitting(false);\n        }}\n      >\n        <Form>\n          <Field\n            component={TextField}\n            className={c.field}\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n          />\n          <br />\n          <Field\n            component={TextField}\n            className={c.field}\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n          />\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n}","import { Avatar, IconButton, Typography } from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    display: 'inline-flex',\n    marginRight: theme.spacing(1),\n  },\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default function UserMenu({userName, onLogOut}: any) {\n  const c = useStyles();\n\n  return (\n    <div className={c.container}>\n      <Avatar className={c.avatar} alt={userName} />\n      <Typography>{userName}</Typography>\n      <IconButton\n        color=\"inherit\"\n        onClick={() => onLogOut()}\n      >\n        <ExitToAppIcon />\n      </IconButton>\n    </div>\n  );\n}","import './App.css';\nimport { useState } from 'react';\n// import axios from 'axios';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport RegisterForm from 'components/RegisterForm';\nimport { useDeleteContactMutation, useGetContactsQuery } from 'redux/contacts/contacts-slice';\nimport { useRegisterUserMutation, useLoginUserMutation, useLogoutUserMutation } from 'redux/auth/auth-slice';\nimport LoginForm from 'components/LoginForm';\nimport UserMenu from 'components/UserMenu';\n\nexport default function App() {\n  const [filter, setFilter] = useState<string>(\"\");\n  const [user, setUser] = useState<any>(null);\n  const [token, setToken] = useState<any>('');\n\n  const { data } = useGetContactsQuery(filter);\n  const [deleteContact] = useDeleteContactMutation();\n  const [registerUser] = useRegisterUserMutation();\n  const [loginUser] = useLoginUserMutation();\n  const [logoutUser] = useLogoutUserMutation();\n\n  const onRegister = async (credentials: any) => {\n    try {\n      const result = await registerUser(credentials);\n      if(\"data\" in result) {\n        setUser(result.data.user)\n        setToken(result.data.token)\n        }\n    }\n    catch (err) {\n          console.log(err)\n        }    \n  }\n\n  const onLogin = async (credentials: any) => {\n    try {\n      const result = await loginUser(credentials);\n      if (\"data\" in result) {    \n        setUser(result.data.user)\n        setToken(result.data.token)\n        }\n    }\n    catch (err) {\n          console.log(err)\n        }    \n  }\n\n  const onLogout = async () => {\n    try {\n      await logoutUser(token);\n        setUser(null);\n        setToken('');\n        }\n    catch (err) {\n          console.log(err)\n        }    \n  }\n\n  const filterContacts = (query: string) => {\n    setFilter(query);\n  }\n\n  return (\n    <div className=\"App\">\n      {user && <UserMenu userName={user.name} onLogOut={onLogout}/>}\n      \n      <ContactForm contacts={data}/>\n      <RegisterForm registerUser={onRegister} />\n      <LoginForm loginUser={onLogin}/>\n\n      <h2>Contacts</h2>\n      <Filter filterContacts={filterContacts}/>\n     {data && <ContactList contacts={data} onDelete={deleteContact} />}\n    </div>\n  );\n}\n","import logger from 'redux-logger';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsApi } from './contacts/contacts-slice';\nimport { authApi } from './auth/auth-slice';\n\nconst middleware = [\n  ...getDefaultMiddleware(),\n  logger,\n  authApi.middleware,\n  contactsApi.middleware,\n];\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    [authApi.reducerPath]: authApi.reducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport {store} from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"fieldInput\":\"ContactForm_fieldInput__3zV51\",\"validatorError\":\"ContactForm_validatorError__3ngg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"itemName\":\"ContactList_itemName__3linx\",\"itemPhone\":\"ContactList_itemPhone__2aABR\"};"],"sourceRoot":""}